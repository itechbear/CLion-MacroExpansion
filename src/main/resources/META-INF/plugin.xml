<idea-plugin version="2">
  <id>com.github.itechbear.clion-macroformatter</id>
  <name>CLion-MacroFormatter</name>
  <version>0.5.0</version>
  <vendor email="itechbear@gmail.com" url="http://github.com/itechbear/CLion-MacroFormatter">itechbear</vendor>

  <description><![CDATA[
      A clion plugin that shows <b>formatted</b> macro expansion in the documentation panel(Ctrl + Q). <br /><br />

      <b>You need to install clang-format(usually included in the clang package) if you choose to use it.</b><br /><br />

      Two screenshots that shows the difference betwwen without and with this plugin are attached.
    ]]></description>

  <change-notes><![CDATA[
      2019.3 Update to get compatible with CLion 2019.3; Add support for IDE Builtin formatter.

      0.4.1 Set default code style to Google.

      0.4.0 Keep compatiblity with the latest CLion eap. <br /><br />

      0.3.0 Warn the user if clang-format is not found. <br /><br />

      0.2.1 Small bugfix. <br /><br />

      0.2 Switch to clang-format.<br /><br />

      0.1 Initial commit.
    ]]>
  </change-notes>

  <!-- please see http://confluence.jetbrains.com/display/IDEADEV/Build+Number+Ranges for description -->
  <idea-version since-build="193" until-build="193.*"/>

  <!-- please see http://confluence.jetbrains.com/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
       on how to target different products -->
  <depends>com.intellij.modules.lang</depends>
  <depends>com.intellij.modules.clion</depends>
  <depends>com.intellij.modules.cidr.lang</depends>

  <extensions defaultExtensionNs="com.intellij">
    <!-- Add your extensions here -->
    <lang.documentationProvider language="ObjectiveC" implementationClass="com.github.itechbear.macroformatter.provider.MacroDocumentationProvider" order="first" />
    <applicationConfigurable instance="com.github.itechbear.macroformatter.ui.ConfigurationPanel"
                             displayName="Macro Formatter"/>
  </extensions>

  <application-components>
    <!-- Add your application components here -->
  </application-components>

  <project-components>
    <!-- Add your project components here -->
  </project-components>

  <actions>
    <!-- Add your actions here -->
  </actions>

</idea-plugin>